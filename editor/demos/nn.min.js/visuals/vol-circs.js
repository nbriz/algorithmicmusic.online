// create canvas for visuals
const canvas = nn.create('canvas').addTo('body')
canvas.width = nn.width
canvas.height = 200

// create synth and meter (volume analyzer)
const meter = new Tone.Meter({ smoothing: 0 })
const synth = new Tone.Synth().toDestination()
synth.connect(meter)

let freq = 0
function attack () {
  freq = nn.random(220, 880)
  synth.triggerAttack(freq)
}

function release () {
  synth.triggerRelease()
}

nn.create('button')
  .content('hold')
  .addTo('body')
  .on('pointerdown', attack)
  .on('pointerup', release)
  .on('pointerleave', release)


// animation loop
function draw () {
  requestAnimationFrame(draw)
  if (freq === 0) return

  // erase last frame
  canvas.clearRect(0, 0, canvas.width, canvas.height)

  // get loudness level
  const db = meter.getValue()
  const loud = nn.map(db, -60, 0, 0, 1)

  if (loud > 0) {
    const x = nn.map(freq, 220, 880, 0, canvas.width)
    const y = canvas.height / 2

    // louder the sound, bigger the circle
    const minR = 6
    const maxR = canvas.height / 2
    const r = nn.lerp(minR, maxR, loud)
    canvas.circle(x, y, r)
  }
}

nn.on('load', draw)
