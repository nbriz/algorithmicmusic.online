// canvas for visualization
const c = nn.create('canvas').addTo('body')
c.width = nn.width
c.height = 200
c.fillStyle = '#f92672'

// volume analyser
const meter = new Tone.Meter({ smoothing: 0 })

// a Tone.js Oscillator
let freq = nn.random(220, 880)
const synth = new Tone.Synth().toDestination()
synth.connect(meter)
// (synth)---(speakers)
//       `---(meter)`

// animation function, draws volume circles across canvas
function draw () {
  requestAnimationFrame(draw) // recursively call draw ~60fps
  c.clearRect(0, 0, c.width, c.height) // clear background

  // get loudness level
  const db = meter.getValue()
  // map db from ~(-60 -> 0) to new range (minR -> maxR)
  const minR = 6
  const maxR = c.height / 2
  const radius = nn.map(db, -60, 0, minR, maxR)

  if (radius > 0) {
    // map frequency acorss canvas width
    const x = nn.map(freq, 220, 880, 0, c.width)
    const y = c.height / 2
    c.circle(x, y, radius)
  }
}

nn.create('button')
  .content('play random tone')
  .addTo('body')
  .on('click', async () => {
    freq = nn.random(220, 880)
    synth.triggerAttackRelease(freq, 0.5)
  })

// start animation loop when page loads
nn.on('load', draw)
