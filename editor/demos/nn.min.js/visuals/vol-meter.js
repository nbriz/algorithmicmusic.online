// canvas for visualization
const c = nn.create('canvas').addTo('body')
c.width = nn.width
c.height = 200
c.fillStyle = '#f92672'


// volume analyser
const meter = new Tone.Meter({ smoothing: 0 })


// a Tone.js player
const filePath = 'https://algorithmicmusic.online/audios/amen-break.mp3'
const player = new Tone.Player(filePath).toDestination()
player.connect(meter)
// (player)---(speakers)
//        `---(meter)`


// a Tone.js Synth
const synth = new Tone.Synth().toDestination()
synth.connect(meter)
// (synth)---(speakers)
//       `---(meter)`


// animation function, draws a circle for volume level
function draw () {
  requestAnimationFrame(draw) // recursively call draw ~60fps
  c.clearRect(0, 0, c.width, c.height) // clear background

  // get loudness level
  const db = meter.getValue()
  // map db from ~(-60 -> 0) to new range (minR -> maxR)
  const minR = 6
  const maxR = c.height / 2
  const radius = nn.map(db, -60, 0, minR, maxR)

  if (radius > 0) {
    const x = c.width / 2
    const y = c.height / 2
    c.circle(x, y, radius)
  }
}

// UI
nn.create('button')
  .content('player start')
  .addTo('body')
  .on('click', () => player.start())

nn.create('button')
  .content('play synth')
  .addTo('body')
  .on('click', () => synth.triggerAttackRelease(440, 0.5))

// start animation loop when page loads
nn.on('load', draw)
